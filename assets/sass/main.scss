$my-primary: #149414; // green
// $my-secondary: #7c9971;

$my-black: #000; // grey
$my-grey-2: #161616; // grey
$my-grey: #181818; // grey
$my-grey-3: #303030; // grey

$my-white: #dbe3d8; // white

$my-green: #033200;
$my-green-secondary: #2b5329;
$my-green-tertiary: #9ccc9c;
$my-secondary: #9ccc9c;

@import "../../node_modules/bootstrap/scss/functions";
@import "../../node_modules/bootstrap/scss/variables";

// Override link color
$link-color: $my-primary;
$link-hover-color: lighten($my-primary, 10%);
$card-bg: $my-grey;
$card-color: $my-white;
$card-border-color: $my-primary;
$btn-bg: $my-primary;

@import "../../node_modules/bootstrap/scss/bootstrap";

$alert-colors: (
    primary: (
        color: $my-primary,
    ),
    secondary: (
        color: $my-grey-3,
    ),
    caution: (
        color: #fce9b3,
        // #ffcc00,
        // #333,
    ),
    important: (
        color: #ffcccb,
        // #ff0000,
        // #333,
    ),
    note: (
        color: #4052d6,
        // #7fff00,
        // #333,
    ),
    tip: (
        color: $my-secondary,
        // #1e90ff,
        // #333,
    ),
    warning: (
        color: #eed202,
        // #ffdd57,
        // #333,
    ),
);

$prefix: "bs-";
@each $state, $colors in $alert-colors {
    .alert-#{$state} {
        --#{$prefix}alert-color: #{$my-white};
        --#{$prefix}alert-bg: #{$my-grey};
        --#{$prefix}alert-border-color: #{map-get($colors, color)};
        --#{$prefix}alert-link-color: #{map-get($colors, color)};
    }
}

.my-btn {
    @include button-variant($my-green-secondary, $my-green-secondary);
    // text-decoration: none !important;
}

.my-btn-2 {
    @include button-variant($my-grey, $my-primary);
    // text-decoration: none !important;
}

.my-disabled-btn {
    @include button-variant($my-grey, $my-grey-3);
    color: $my-grey-3;
}

.last-mod {
    // text-decoration: ligthen($my-grey-3, 10%);
    text-decoration: underline;
}

//TODO: define more text colors

body {
    background-color: $my-grey;
    color: $my-white;
    // NOTE: prevent animation from being triggered before page load
    &.preload {
        visibility: hidden;
        * {
            transition: none !important;
        }
    }
    &.noanimation {
        * {
            transition: none !important;
        }
    }
}

// START OF HEADER

$font-header-size: 1.5rem;
// TODO: examine better this height relative to root font size
$header-size: $font-header-size * 2.5;
$toggler-size: 50px;
$sidebar-size: 300px + $toggler-size;

.my-header {
    background-color: $my-black;
    font-family: "Roboto Condensed", sans-serif;
    font-weight: bold;
    font-size: $font-header-size;
    height: $header-size;

    .container-fluid,
    .navbar-collapse,
    .navbar-nav,
    .my-brand,
    nav {
        height: 100%;
    }
}

.my-brand {
    @include make-col-ready();
    @include make-col(2);

    min-width: $sidebar-size;
    // font-size: clamp(1rem, 1.5vw, $font-header-size);

    .my-port {
        color: $my-primary;
    }

    .my-host {
        color: $my-white;
    }

    &:hover {
        .my-host {
            color: lighten($my-white, 10%);
        }
        .my-port {
            color: lighten($my-primary, 10%);
        }
    }

    * {
        text-decoration: none;
    }
    white-space: nowrap;
    display: flex;
    background-color: $my-black;
    align-items: center;

    // Make padding equal to nav-elements
    // padding-x: 0 var(--bs-navbar-nav-link-padding-x) 0
    //     var(--bs-navbar-nav-link-padding-x);
    // padding: 0rem;

    // border-right: 2px solid $my-secondary !important;

    @include media-breakpoint-down(lg) {
        @include make-col(12);
        height: auto;
        justify-content: center;
    }
}

.navbar-nav {
    .my-nav-el {
        text-align: center !important;
        background-color: $my-black;

        color: $my-white;
        border-left: 2px solid $my-grey !important;

        &.active {
            background-color: $my-grey;
            border-left: 2px solid $my-primary !important;
            color: $my-primary;

            &:hover {
                background-color: $my-grey;
                color: lighten($my-primary, 10%);
            }
        }

        &:last-child {
            border-right: 2px solid $my-grey !important;
        }

        &:hover {
            // color: $my-primary;
            color: lighten($my-white, 10%);
            background-color: lighten($my-black, 5%);
        }
    }
}

.navbar-toggler {
    .navbar-toggler-icon {
        background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'><path stroke='rgba(255,255,255,1)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/></svg>");
    }
}

// Define mixin for placing elements after header
@mixin after-header() {
    height: subtract(100vh, $header-size);
    // @include media-breakpoint-down(lg) {
    //     height: subtract(100vh, add($header-size, $toggler-size));
    // }
}

// END OF HEADER

// START OF SIDEBAR

.my-sidebar {
    @include make-col-ready();
    @include after-header();

    position: sticky;
    overflow-y: auto;
    background-color: $my-black;

    align-items: center;
    flex-direction: column;
    display: flex;

    // NOTE: initial values before transition to show
    width: 0;
    padding: 0;
    opacity: 0;

    transition-property: all;
    transition-duration: 0.3s;
    transition-timing-function: linear;
    &.show {
        opacity: 1;
        padding: 1.25rem;
    }
    @include media-breakpoint-up(lg) {
        &.show {
            @include make-col(2);
            padding-right: Max(1.25rem, $toggler-size);
            // padding: 1.25rem;
            // opacity: 1;

            // NOTE: do math (use the `max` css function)
            // instead of min-width to correctly animate from 0 to width
            width: Max($sidebar-size, 16.66666667%);
        }
    }
    @include media-breakpoint-down(lg) {
        @include make-col(12);
        max-height: 0;
        &.show {
            // NOTE: Using max-height so it animates from 0 to 1000px. The value 1000 was
            // chosen empirically.
            max-height: 1000px;
        }
    }
}

#sidebar-toggler {
    position: fixed;
    top: add($header-size, 20px);
    left: 2px; // account for main-layout left border
    width: $toggler-size;

    transition-property: all;
    transition-duration: 0.3s;
    transition-timing-function: linear;

    border-top-left-radius: 0;
    border-bottom-left-radius: 0;

    @include media-breakpoint-up(lg) {
        &::before {
            content: "\f061"; // Unicode for the right arrow icon
            font-family: "Font Awesome 5 Free"; // Ensure the correct Font Awesome font
            font-weight: 900; // Necessary for Font Awesome icons
        }
        &.show {
            left: Max($sidebar-size, 16.66666667%);
            transform: translateX(-100%) scaleX(-1);
        }
    }

    @include media-breakpoint-down(lg) {
        position: sticky;
        z-index: 1015;
        height: $toggler-size;
        top: $header-size;
        border-radius: 0;
        width: 100%;
        &::before {
            content: "Show Info";
        }
        &.show::before {
            content: "Hide Info";
        }
    }
}

.my-email {
    font-size: clamp(0.8rem, 0.75vw, 1rem);
}

.my-profile-img {
    @include media-breakpoint-down(lg) {
        max-width: 50%;
    }
}

.my-home-profile-img {
    max-width: Min(400px, 100%);
}

.my-name {
    font-family: "Roboto Condensed", sans-serif;
    padding: 1rem;
    color: $my-white;
}

// END OF SIDEBAR

.my-main-layout {
    @include make-col-ready();
    @include make-col();

    @include after-header();
    border-left: 2px solid $my-primary !important;
    // padding: 1.25rem;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    // height: 100%;
    overflow-y: auto;
    padding: 1.25rem;
    padding-left: Max(1.25rem, $toggler-size);
    padding-top: 0;

    @include media-breakpoint-down(lg) {
        @include make-col(12);
        height: auto;
        overflow-y: visible;
        min-height: subtract(100vh, add($header-size, $toggler-size));
    }
}

.socials li {
    padding: 0.5rem !important;
}

.my-post-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    background-color: $my-grey;
    z-index: 1010;

    @include media-breakpoint-down(lg) {
        top: add($header-size, $toggler-size);
    }
}

.my-toc {
    position: sticky;
    z-index: 1010;
    font-size: 1.2rem;
    text-decoration: none;
    top: 0;
    align-self: start; // NOTE: needed so sticky position works correctly
    padding: 1rem;
    padding-top: $header-size + 2rem;
    ul {
        list-style: none;
        // target direct child
        li {
            a {
                // color: $my-secondary;
                display: block;
                padding: 0.5rem;
                text-decoration: none;
                color: $my-green-secondary;
                &.active {
                    color: $my-primary !important; // prevent hover from overriding
                }
                &:hover {
                    color: lighten($my-green-secondary, 10%);
                }
            }
            &:has(a.active) {
                // Add styles to the <li> here when <a> is active
                border-left: 2px solid $my-primary !important;
            }
            // NOTE: to keep the width constant, create a border with background-color
            border-left: 2px solid $my-grey !important;
        }
    }

    @include media-breakpoint-down(lg) {
        top: add($header-size, $toggler-size);
    }
}

// Home
.my-home {
    padding: 2rem;
    border: 2px solid $my-primary !important;
    display: flex;
}

.my-block {
}
